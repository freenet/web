<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Front-Page on Freenet</title><link>https://freenet.org/tags/front-page/</link><description>Recent content in Front-Page on Freenet</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 05 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://freenet.org/tags/front-page/feed.xml" rel="self" type="application/rss+xml"/><item><title>Weekly Dev Meeting - Refactoring Connection Handler for Better Unit Testing</title><link>https://freenet.org/news/weekly-dev-meeting-refactoring-connection-handler-for-better-unit-testing/</link><pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/weekly-dev-meeting-refactoring-connection-handler-for-better-unit-testing/</guid><description>This week we&amp;rsquo;ve been focussed on a crucial refactoring task to improve how we manage network connections. The goal is to make it easier to isolate bugs by separating the connection handling logic from the transport layer so they can be tested independently.
What&amp;rsquo;s Changing:
Decoupling Connection Handling: We‚Äôre separating the connection handling code from the transport layer. This change allows us to test connection states on their own, without involving the transport mechanisms.</description></item><item><title>News</title><link>https://freenet.org/news/</link><pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/</guid><description/></item><item><title>How Freenet Works</title><link>https://freenet.org/news/how-freenet-works-video-talk/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/how-freenet-works-video-talk/</guid><description>Ian Clarke, the creator of Freenet, explains how we solve problems like efficiently finding data, adapt to changing network conditions, and managing a peer&amp;rsquo;s resource usage. Q&amp;amp;A includes how Freenet compares to other networks, the history of Freenet, and how Freenet adapts to geography.
Also available on Rumble ùïè</description></item><item><title>Zero-Knowledge Proofs and Anonymous Reputation in Freenet</title><link>https://freenet.org/news/882-zero-knowledge-proofs-and-anonymous-reputation-in-freenet/</link><pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate><guid>https://freenet.org/news/882-zero-knowledge-proofs-and-anonymous-reputation-in-freenet/</guid><description>Zero-knowledge proofs are one of the most significant developments in cryptography since the invention of public-key crypto in the 1970s. But what exactly are they, what are they useful for, and what is their relevance to Freenet?
What Are Zero-Knowledge Proofs? In essence, zero-knowledge proofs (ZKPs) allow one party to prove that they have some secret information, but without revealing anything about the information itself. For example, you could prove that you have some data that satisfies a certain condition like hashing to a particular value, without revealing the data itself.</description></item><item><title>How to Build Apps on Freenet</title><link>https://freenet.org/news/building-apps-video-talk/</link><pubDate>Thu, 07 Sep 2023 00:00:00 +0000</pubDate><guid>https://freenet.org/news/building-apps-video-talk/</guid><description>Ian Clarke explains how to build apps on Freenet, including the basic components of Freenet&amp;rsquo;s architecture like contracts, delegates, and user interfaces.
Also available on Rumble ùïè</description></item><item><title>Proof-of-Trust: A Wealth-Unbiased Consensus Mechanism for Distributed Systems</title><link>https://freenet.org/news/799-proof-of-trust-a-wealth-unbiased-consensus-mechanism-for-distributed-systems/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><guid>https://freenet.org/news/799-proof-of-trust-a-wealth-unbiased-consensus-mechanism-for-distributed-systems/</guid><description>Traditional approaches to rate-limiting the creation of things like coins, tokens, and identities in distributed networks rely on computational (proof-of-work) or financial barriers (proof-of-stake) as a source of scarcity. While effective in some contexts, these methods are wasteful and unfairly favor those with more resources.
What is Proof-of-Trust? Proof-of-Trust offers an alternative by utilizing the scarcity of reciprocal trust between individuals as the primary resource for rate-limiting various network activities. Unlike existing models, Proof-of-Trust does not inherently favor participants with greater computational power or financial means.</description></item><item><title>Mitigating Sybil attacks in Freenet</title><link>https://freenet.org/news/456-mitigating-sybil-attacks-in-freenet/</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate><guid>https://freenet.org/news/456-mitigating-sybil-attacks-in-freenet/</guid><description>Every node in the Locutus network has a location, a floating-point value between 0.0 and 1.0 representing its position in the small-world network. These are arranged in a ring so positions 0.0 and 1.0 are the same. Each contract also has a location that is deterministically derived from the contract&amp;rsquo;s code and parameters through a hash function.
The network&amp;rsquo;s goal is to ensure that nodes close together are much more likely to be connected than distant nodes, specifically, the probability of two nodes being connected should be proportional to 1/distance.</description></item></channel></rss>