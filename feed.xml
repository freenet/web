<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Declare Your Digital Independence on Freenet</title><link>https://freenet.org/</link><description>Recent content in Declare Your Digital Independence on Freenet</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 05 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://freenet.org/feed.xml" rel="self" type="application/rss+xml"/><item><title>Weekly Dev Meeting - Refactoring Connection Handler for Better Unit Testing</title><link>https://freenet.org/news/weekly-dev-meeting-refactoring-connection-handler-for-better-unit-testing/</link><pubDate>Fri, 05 Jul 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/weekly-dev-meeting-refactoring-connection-handler-for-better-unit-testing/</guid><description>This week we&amp;rsquo;ve been focussed on a crucial refactoring task to improve how we manage network connections. The goal is to make it easier to isolate bugs by separating the connection handling logic from the transport layer so they can be tested independently.
What&amp;rsquo;s Changing:
Decoupling Connection Handling: We‚Äôre separating the connection handling code from the transport layer. This change allows us to test connection states on their own, without involving the transport mechanisms.</description></item><item><title>Building Freenet Apps</title><link>https://freenet.org/dev/apps/</link><pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/dev/apps/</guid><description>Useful Links Freenet User Manual freenet-ping - an example that demonstrates how to build a simple Freenet app Ideas: Open Issues for Decentralized Services Loading...</description></item><item><title>Freenet's History</title><link>https://freenet.org/resources/history/</link><pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/resources/history/</guid><description>History of Freenet Introduction Freenet has a long and somewhat complicated 25-year history. This page aims to clarify the timeline and the relationship between various projects that have evolved from the original Freenet.
Timeline and Evolution The Birth of Freenet Freenet was initially developed in 1999 at the University of Edinburgh by Ian Clarke. It was conceived as a decentralized system for anonymous information storage and retrieval. Over time, the project evolved significantly, incorporating various rewrites and improvements.</description></item><item><title>Frequently Asked Questions</title><link>https://freenet.org/faq/</link><pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/faq/</guid><description>What is Freenet? How does Freenet work? What is the project&amp;rsquo;s history? How do the previous and current versions of Freenet differ? Will the new Freenet be backwards compatible with the old Freenet? Why was Freenet rearchitected and rebranded? How does Freenet compare to other decentralized systems? Who is behind Freenet? What is the status of Freenet? Can I follow Freenet on social media? How can I financially support Freenet development?</description></item><item><title>Video Talks</title><link>https://freenet.org/resources/video-talks/</link><pubDate>Mon, 24 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/resources/video-talks/</guid><description>Here you will find a collection of video talks about Freenet.
June 10, 2024 - How Freenet Works September 7, 2023 - How to Build Apps on Freenet September 13, 2022 - Ian Interviewed by Louis Rossman</description></item><item><title>Core Development</title><link>https://freenet.org/dev/core/</link><pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/dev/core/</guid><description>Introduction Welcome to the Core Development page for Freenet. This section is dedicated to the development of the Freenet platform itself, ensuring its robustness, scalability, and efficiency. Whether you&amp;rsquo;re an experienced developer or a newcomer, you&amp;rsquo;ll find essential resources and updates here.
Useful Links Weekly Developer Meetings July 5, 2024 - Weekly Dev Meeting - Refactoring Connection Handler for Better Unit Testing June 10, 2024 - Weekly Dev Meeting - Gateway deployment, freenet-chat May 24, 2024 - Weekly Dev Meeting - Enhancing Connection Stability and Finalizing Transport Fixes May 11, 2024 - Weekly dev meeting - network integration testing and squashing final bugs May 3, 2024 - Weekly dev meeting - progressing Towards Network Stability Recently Merged Features Loading.</description></item><item><title>Get Involved</title><link>https://freenet.org/community/get-involved/</link><pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/community/get-involved/</guid><description/></item><item><title>Support</title><link>https://freenet.org/community/support/</link><pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/community/support/</guid><description/></item><item><title>Tutorials</title><link>https://freenet.org/resources/tutorials/</link><pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/resources/tutorials/</guid><description/></item><item><title>How Freenet Works</title><link>https://freenet.org/news/how-freenet-works-video-talk/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/how-freenet-works-video-talk/</guid><description>Ian Clarke, the creator of Freenet, explains how we solve problems like efficiently finding data, adapt to changing network conditions, and managing a peer&amp;rsquo;s resource usage. Q&amp;amp;A includes how Freenet compares to other networks, the history of Freenet, and how Freenet adapts to geography.
Also available on Rumble ùïè</description></item><item><title>Weekly Dev Meeting - Gateway deployment, freenet-chat</title><link>https://freenet.org/news/1127-weekly-dev-meeting-gateway-deployment-freenet-chat/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/1127-weekly-dev-meeting-gateway-deployment-freenet-chat/</guid><description>Freenet Chat Development:
Ian has been working on the Freenet chat system and shared a specification document. He decided to focus on a web-based interface rather than a command-line interface due to ease of implementation. A significant topic was the method for updating contracts within the network. Ian proposed a replace contract field that allows for contract updates signed by the contract owner, similar to HTTP 301 redirects. Technical Challenges and Solutions:</description></item><item><title>Weekly Dev Meeting - Enhancing Connection Stability and Finalizing Transport Fixes</title><link>https://freenet.org/news/1097-weekly-dev-meeting-enhancing-connection-stability-and-finalizing-transport-fixes/</link><pubDate>Fri, 24 May 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/1097-weekly-dev-meeting-enhancing-connection-stability-and-finalizing-transport-fixes/</guid><description>Focus on Connection Stability and Transport Improvements
Our primary focus has been on enhancing the stability and functionality of the connection and transport layers within Freenet. Ignacio has dedicated significant effort to address issues related to the connect operation and transport mechanisms. We‚Äôve identified and resolved several bugs, ensuring that connections are maintained properly and cleaned up when lost. Although we haven‚Äôt fully tested all scenarios, the connect operation is now functioning as expected.</description></item><item><title>Weekly dev meeting - network integration testing and squashing final bugs</title><link>https://freenet.org/news/1081-weekly-dev-meeting-network-integration-testing-and-squashing-final-bugs/</link><pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/1081-weekly-dev-meeting-network-integration-testing-and-squashing-final-bugs/</guid><description>In our latest dev meeting, we dove into the recent updates and challenges with the Freenet network protocol. Ignacio shared the latest on our efforts to boost node connectivity and stability across the network.
What‚Äôs New: Stability and Bug Fixes: We spent a good chunk of this week squashing bugs to make network connections more stable. Ignacio explained the technical hurdles we‚Äôre tackling to keep connections between nodes reliable. It‚Äôs tricky but we&amp;rsquo;re making headway.</description></item><item><title>Weekly dev meeting - progressing Towards Network Stability</title><link>https://freenet.org/news/1074-weekly-dev-meeting-progressing-towards-network-stability/</link><pubDate>Fri, 03 May 2024 00:00:00 +0000</pubDate><guid>https://freenet.org/news/1074-weekly-dev-meeting-progressing-towards-network-stability/</guid><description>Summary: In this week&amp;rsquo;s Freenet developer meeting, Ian Clarke and Ignacio Duart discussed significant advancements and remaining challenges before getting the network up and running. The primary focus was on refining the connection and configuration processes within Freenet&amp;rsquo;s system. Key highlights include:
Configuration Management: The developers have implemented a system to set and save default configurations, which are crucial for initializing and maintaining stable operations after restarts. The configuration files are currently managed using TOML due to its robust support in Rust.</description></item><item><title>Weekly Developer Meeting: Updating State and Performance Optimizations</title><link>https://freenet.org/news/900-weekly-developer-meeting-updating-state-and-performance-optimizations/</link><pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate><guid>https://freenet.org/news/900-weekly-developer-meeting-updating-state-and-performance-optimizations/</guid><description>We had a detailed technical discussion focusing on various aspects of our project, Freenet. Here&amp;rsquo;s a breakdown of the key points:
Contract Update Mechanism: We tackled the contract update mechanism, crucial for handling the state (the associated data) of contracts in our key-value store. This involves understanding how updates are initiated by applications, the merging of states, and the process of sending updates to subscribers.
Update and Merge Process: We discussed the specifics of how updates work, particularly focusing on the &amp;lsquo;put&amp;rsquo; operation.</description></item><item><title>Zero-Knowledge Proofs and Anonymous Reputation in Freenet</title><link>https://freenet.org/news/882-zero-knowledge-proofs-and-anonymous-reputation-in-freenet/</link><pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate><guid>https://freenet.org/news/882-zero-knowledge-proofs-and-anonymous-reputation-in-freenet/</guid><description>Zero-knowledge proofs are one of the most significant developments in cryptography since the invention of public-key crypto in the 1970s. But what exactly are they, what are they useful for, and what is their relevance to Freenet?
What Are Zero-Knowledge Proofs? In essence, zero-knowledge proofs (ZKPs) allow one party to prove that they have some secret information, but without revealing anything about the information itself. For example, you could prove that you have some data that satisfies a certain condition like hashing to a particular value, without revealing the data itself.</description></item><item><title>How to Build Apps on Freenet</title><link>https://freenet.org/news/building-apps-video-talk/</link><pubDate>Thu, 07 Sep 2023 00:00:00 +0000</pubDate><guid>https://freenet.org/news/building-apps-video-talk/</guid><description>Ian Clarke explains how to build apps on Freenet, including the basic components of Freenet&amp;rsquo;s architecture like contracts, delegates, and user interfaces.
Also available on Rumble ùïè</description></item><item><title>Proof-of-Trust: A Wealth-Unbiased Consensus Mechanism for Distributed Systems</title><link>https://freenet.org/news/799-proof-of-trust-a-wealth-unbiased-consensus-mechanism-for-distributed-systems/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><guid>https://freenet.org/news/799-proof-of-trust-a-wealth-unbiased-consensus-mechanism-for-distributed-systems/</guid><description>Traditional approaches to rate-limiting the creation of things like coins, tokens, and identities in distributed networks rely on computational (proof-of-work) or financial barriers (proof-of-stake) as a source of scarcity. While effective in some contexts, these methods are wasteful and unfairly favor those with more resources.
What is Proof-of-Trust? Proof-of-Trust offers an alternative by utilizing the scarcity of reciprocal trust between individuals as the primary resource for rate-limiting various network activities. Unlike existing models, Proof-of-Trust does not inherently favor participants with greater computational power or financial means.</description></item><item><title>Ian Interviewed by Louis Rossman</title><link>https://freenet.org/news/ian-interviewed-by-louis-rossmann/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://freenet.org/news/ian-interviewed-by-louis-rossmann/</guid><description>Ian sat down with Louis Rossmann to discuss the history and motivation for Freenet, and why he decided to re-architect it.</description></item><item><title>Mitigating Sybil attacks in Freenet</title><link>https://freenet.org/news/456-mitigating-sybil-attacks-in-freenet/</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate><guid>https://freenet.org/news/456-mitigating-sybil-attacks-in-freenet/</guid><description>Every node in the Locutus network has a location, a floating-point value between 0.0 and 1.0 representing its position in the small-world network. These are arranged in a ring so positions 0.0 and 1.0 are the same. Each contract also has a location that is deterministically derived from the contract&amp;rsquo;s code and parameters through a hash function.
The network&amp;rsquo;s goal is to ensure that nodes close together are much more likely to be connected than distant nodes, specifically, the probability of two nodes being connected should be proportional to 1/distance.</description></item></channel></rss>